// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Settings model for storing system prompt and application configuration
model Settings {
  id                String   @id @default(cuid())
  systemPrompt      String   @default("You are a helpful AI assistant making phone calls on behalf of the user. Be polite, professional, and accomplish the task efficiently.")
  defaultAssistantId String?  // Optional reference to default assistant
  openaiApiKey      String?  // Optional OpenAI API key override
  vapiApiKey        String?  // Optional Vapi API key override
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("settings")
}

// Call model for storing phone call records and status
model Call {
  id           String    @id @default(cuid())
  phoneNumber  String    // Phone number to call
  status       String    @default("idle") // CallStatus enum: idle, creating, dialing, ringing, in-progress, completed, failed, cancelled
  assistantId  String?   // Optional reference to assistant used for this call
  vapiCallId   String?   // Vapi API call ID for tracking
  startedAt    DateTime? // When the call actually started
  endedAt      DateTime? // When the call ended
  duration     Int?      // Call duration in seconds
  cost         Float?    // Call cost in dollars
  metadata     String?   // JSON string for flexible additional data
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relations
  transcripts  Transcript[] // One call can have multiple transcript entries
  assistant    Assistant?   @relation(fields: [assistantId], references: [id]) // Optional assistant used for this call

  @@map("calls")
}

// Transcript model for storing conversation data and AI-generated analysis
model Transcript {
  id              String   @id @default(cuid())
  callId          String   // Foreign key to Call
  content         String   // Full transcript content (can be very long)
  summary         String?  // AI-generated summary of the conversation
  analysis        String?  // AI-generated analysis of call outcome
  processingStatus String  @default("pending") // pending, processing, completed, failed
  wordCount       Int?     // Number of words in transcript for analytics
  confidence      Float?   // Transcript confidence score (0.0 to 1.0)
  language        String?  // Detected language of the conversation
  metadata        String?  // JSON string for additional processing data
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  call            Call     @relation(fields: [callId], references: [id], onDelete: Cascade)

  // Indexes for better query performance
  @@index([callId])
  @@index([processingStatus])
  @@map("transcripts")
}

// Assistant model for storing Vapi assistant configurations
model Assistant {
  id              String   @id @default(cuid())
  name            String   // Human-readable name for the assistant
  systemPrompt    String   // System prompt that defines assistant behavior
  vapiAssistantId String?  // Vapi API assistant ID after creation
  isActive        Boolean  @default(true) // Whether this assistant is available for use
  voice           String?  // Voice configuration (e.g., "jennifer", "mark")
  language        String   @default("en") // Language code (en, es, fr, etc.)
  model           String   @default("gpt-4") // AI model to use (gpt-4, gpt-3.5-turbo, etc.)
  temperature     Float?   // AI temperature setting (0.0 to 1.0)
  maxTokens       Int?     // Maximum tokens for responses
  description     String?  // Optional description of assistant purpose
  tags            String?  // JSON array of tags for categorization
  usageCount      Int      @default(0) // Number of times this assistant has been used
  lastUsedAt      DateTime? // When this assistant was last used
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  calls           Call[]   // Calls that used this assistant (via assistantId)

  // Indexes for better query performance
  @@index([isActive])
  @@index([vapiAssistantId])
  @@index([lastUsedAt])
  @@map("assistants")
}

// Additional models will be added in upcoming tasks
